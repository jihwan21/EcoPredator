package TeamProject;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

//품목 클래스
abstract class Item1 {
    private String name;
    private int price;

    public Item1(String name, int price) {
        this.name = name;
        this.price = price;
    }

    public String getName() {
        return name;
    }

    public int getPrice() {
        return price;
    }
    
    public abstract void use();
}

// 배틀 아이템 클래스
class BattleItem extends Item1 {
    private String effect;

    public BattleItem(String name, int price, String effect) {
        super(name, price);
        this.effect = effect;
    }

    // 전투 클래스에 사용
    public void use() {
        System.out.println("사용한 효과: " + effect);
    }
}

// 일반 장비 클래스
class Equipment extends Item1 {
	// 능력치 추가해야댐
    private int durability;

    public Equipment(String name, int price, int durability) {
        super(name, price);
        this.durability = durability;
    }

    public void use() {
        System.out.println("장비를 착용했습니다.");
    }
}

// VIP 아이템 클래스
class VIPItem extends Item1 {
    private String specialAbility;

    public VIPItem(String name, int price, String specialAbility) {
        super(name, price);
        this.specialAbility = specialAbility;
    }

    public void use() {
        System.out.println("특별 능력을 발동했습니다: " + specialAbility);
    }
}

// 인벤토리 클래스
class Inventory {
    private List<Item1> items;

    public Inventory() {
        items = new ArrayList<>();
    }

    public void addItem(Item1 item) {
        items.add(item);
        System.out.println(item.getName() + " 인벤토리에 추가했습니다.");
    }

    public void removeItem(Item1 item) {
        items.remove(item);
        System.out.println(item.getName() + " 인벤토리에서 제거했습니다.");
    }

    public void displayInventory() {
        if (items.isEmpty()) {
            System.out.println("인벤토리가 비어있습니다.");
        } else {
            System.out.println("인벤토리에 있는 아이템:");
            for (Item1 item : items) {
                System.out.println("- " + item.getName());
            }
        }
    }
}

// 상점 클래스
class Shop {
    private Inventory playerInventory;
    private List<Item1> availableItems;

    public Shop() {
        playerInventory = new Inventory();
        availableItems = new ArrayList<>();

        // 상점에 판매할 아이템 추가
        availableItems.add(new BattleItem("HP 포션", 10, "체력 회복"));
        availableItems.add(new BattleItem("MP 포션", 15, "마나 회복"));
        availableItems.add(new BattleItem("상태이상 아이템", 20, "상태이상 저항"));
        availableItems.add(new Equipment("투구", 50, 100));
        availableItems.add(new Equipment("갑옷", 100, 200));
        availableItems.add(new Equipment("날개", 200, 150));
        availableItems.add(new Equipment("아가미", 250, 180));
        availableItems.add(new Equipment("어항", 300, 220));
        availableItems.add(new VIPItem("가호", 500, " 특수 능력 사용."));
    }

    public void showAvailableItems() {
        System.out.println("구매 가능한 품목:");
        for (int i = 0; i < availableItems.size(); i++) {
        	Item1 item = availableItems.get(i);
            System.out.println((i + 1) + ". " + item.getName() + " - 가격: " + item.getPrice());
        }
    }

    // 아이템 구매
    public void purchaseItem(int itemIndex) {
        if (itemIndex >= 1 && itemIndex <= availableItems.size()) {
        	Item1 item = availableItems.get(itemIndex - 1);
            if (item.getPrice() <= getPlayerGold()) {
                playerInventory.addItem(item);
                reducePlayerGold(item.getPrice());
            } else {
                System.out.println("소지한 골드가 부족합니다.");
            }
        } else {
            System.out.println("유효한 품목을 선택해주세요.");
        }
    }

    private int getPlayerGold() {
    	// 플레이어의 재화 반환 코드
        return 000; // 예시
    }

    // 플레이어 골드 감소
    private void reducePlayerGold(int amount) {
        int currentGold = getPlayerGold();
        
        if (currentGold >= amount) {
            currentGold -= amount;
            System.out.println("플레이어의 골드가 " + amount + "만큼 감소했습니다.");
            System.out.println("현재 골드: " + currentGold);
        } else {
            System.out.println("플레이어의 골드가 부족합니다.");
        }
    }
    public Inventory getPlayerInventory() {
        return playerInventory;
    }
}
	
public class store_inventory {
	// 메인 클래스
	public class Main {
	    public static void main(String[] args) {
	        Shop shop = new Shop();
	        Scanner scanner = new Scanner(System.in);

	        while (true) {
	        	System.out.print("1. 탐험, 2. 상점, 3. 가방 4. 스탯, 5.강화, 6. 진화, 0. 게임 종료");

	            int choice = scanner.nextInt();

	            switch (choice) {
	                case 1:

	                case 2:
	                    shop.showAvailableItems();
	                    System.out.println("구매할 품목 번호를 입력하세요 (0: 뒤로가기):");
	                    int itemChoice = scanner.nextInt();
	                    if (itemChoice == 0) {
	                        break;
	                    }
	                    shop.purchaseItem(itemChoice);
	                    break;

	                case 3:
	                    shop.getPlayerInventory().displayInventory();
	                    break;

	                case 4:
	                	break;
	                
	                case 5:
	                	break;
	                
	                case 6:
	                	break;
	                    
	                case 0:
	                    System.out.println("게임 종료");
	                    System.exit(0);
	                default:
	                    System.out.println("잘못 입력");
	                    break;
	            }
	        }
	    }
	}
}
