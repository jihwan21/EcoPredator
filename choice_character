//package TeamProject;
//
//public class first_character {
//	public static void main(String[] args) {
//		Mosquito player_char = new Mosquito(1,11);
//		player_char.setStatus();
//		System.out.println(player_char.hp);
//		System.out.print(player_char.attack());
//	}
//
//}

class Player {// 공동으로 사용되는 것은 정적변수를 사용함

	static String name, tribe;
	static int hpPotionN, mpPotionN, 수류탄N, 일반장비N, 아가미N, 어항N, 날개N, 
			   pMoney;
	
  //위쪽에 있는 변수는 진화시에도 바뀌지 않는 변수, 아래쪽에 있는 변수는 진화시 바뀌는 변수
  
	static int level, power, defense, hp, mp;// 레벨, 힘, 방어력, 체력/최대체력, 마나/최대마나
	static int buff, debuff;// 버프와 디버프
	static int upgradeS01, priceS01 = 20;//1번스킬 업그레이드 수치와 가격
	
	static int upgrade01, money;
  
	
	
	void upgradeSkill(int select) {// 업그레이드 클래스를 따로 구현하지 않고 플레이어 클래스에서 메서드로 구현
		if (pMoney >= Player.priceS01 && select == 1)//{
			Player.upgrade01 += 10;// 지금은 그냥 더했지만 실수로 계산되게해서 1.1로 곱하는것도 좋을듯
	    Player.money -= Player.priceS01;//'플레이어 돈'-'업그레이드 가격'
      Player.priceS01 += 10;//1번스킬 '업그레이드 가격'증가
    }
}

class Monster {
	Player player = new Player();
	String tribe;
	int level, power, defense, money, hp, mp, exp;
	// 체력/최대체력, 마나/최대마나
	int buff, debuff;
	int upgradeS01;
	int location;
	int attack = (power + buff + debuff + upgradeS01);
			
	void setStatus() {// 생물별로 다른 스탯을 플레이어 전역변수에 저장하는 메서드
		player.tribe = tribe;
		player.level = level;
		player.power = power;
		player.defense = defense;
		player.hp = hp;
		player.mp = mp;
		player.upgradeS01 = upgradeS01;}
	public int skill01() {return 0;}

	public void printM() { // 그림}
	}
}

class Mosquito extends Monster {
	Mosquito(int level, int location){
		this.tribe = "모기";
		this.level = level; 
		this.power = 10 * level * location; 
		this.defense = 10 * level * location; 
		this.money = 1 * location; 
		this.hp = 100 * level * location; 
		this.mp = 50; 
		this.buff = 0; 
		this.debuff = 0;
		this.upgradeS01 = 0;}
	// 일반 공격
	int attack() {return attack;}
	
	public int skill01() {// 몬스터 고유스킬 흡혈공격
		int heal = attack;// 입힌피해만큼 회복
		hp += heal*2;
		return attack;// 데미지 리턴
	}
}

// 하루살이 클래스
class mayfly extends Monster {
	mayfly(int level, int location){
		this.tribe = "하루살이";
		this.level = level; 
		this.power = 10 * level * location; 
		this.defense = 10 * level * location; 
		this.money = 1 * location; 
		this.hp = 100 * level * location; 
		this.mp = 50; 
		this.buff = 0; this.debuff = 0;
		this.upgradeS01 = 0;}
	// 일반 공격
	int attack() {return power;}
	
	public int skill01() {// 몬스터 고유스킬 분신술
		attack *= 2;
		return attack;
	}
}

// 바퀴벌레 클래스
class roach extends Monster {
	roach(int level, int location){
		this.tribe = "바퀴벌레";
		this.level = level; 
		this.power = 10 * level * location; 
		this.defense = 10 * level * location; 
		this.money = 1 * location; 
		this.hp = 100 * level * location; 
		this.mp = 50; 
		this.buff = 0; this.debuff = 0;
		this.upgradeS01 = 0;}
	// 일반 공격
	int attack() {return attack;}
	
	// 최대체력 증가, 체력 회복
	public int skill01() {
		hp *= 4;
		return 0;
	}
}

//나비 클래스
class butterfly extends Monster {
	butterfly(int level, int location){
		this.tribe = "나비";
		this.level = level; 
		this.power = 10 * level * location; 
		this.defense = 10 * level * location; 
		this.money = 1 * location; 
		this.hp = 100 * level * location; 
		this.mp = 50; 
		this.buff = 0; this.debuff = 0;
		this.upgradeS01 = 0;}
	// 일반 공격
	int attack() {return attack;}
	public int skill01() {// 몬스터 고유스킬 도망다니기
		defense *= 4;
		return 0;
	}
}

//꿀벌 클래스
class honeybee extends Monster {
	honeybee(int level, int location){
		this.tribe = "꿀법";
		this.level = level; 
		this.power = 10 * level * location; 
		this.defense = 10 * level * location; 
		this.money = 1 * location; 
		this.hp = 100 * level * location; 
		this.mp = 50; 
		this.buff = 0; this.debuff = 0;
		this.upgradeS01 = 0;}
	// 일반 공격
	int attack() {return attack;}
	public int skill01() {// 몬스터 고유스킬 벌침쏘기
		power *= 4;
		hp /= 2;
		return attack;
	}
}
