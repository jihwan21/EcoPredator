//플레이어 클래스
public class Player {// 공동으로 사용되는 것은 정적변수를 사용함

	static String name, style;
	static int hpPotionN, mpPotionN, 수류탄N, 일반장비N, 아가미N, 어항N, 날개N, pMoney;
  
  //위쪽에 있는 변수는 진화시에도 바뀌지 않는 변수, 아래쪽에 있는 변수는 진화시 바뀌는 변수
  
	static int level, power, defense, hp, hpMax, mp, mpMax;// 레벨, 힘, 방어력, 체력/최대체력, 마나/최대마나
	static int buff, debuff;// 버프와 디버프
	static int upgradeS01, priceS01 = 20;//1번스킬 업그레이드 수치와 가격
  
	void upgradeSkill(int select) {// 업그레이드 클래스를 따로 구현하지 않고 플레이어 클래스에서 메서드로 구현
		if (pMoney >= Player.priceS01 && select == 1)//{
			Player.upgrade01 += 10;// 지금은 그냥 더했지만 실수로 계산되게해서 1.1로 곱하는것도 좋을듯
	    Player.money -= Player.priceS01;//'플레이어 돈'-'업그레이드 가격'
      Player.priceS01 += 10;//1번스킬 '업그레이드 가격'증가
    }
  }
}

//모기 
public class Mosquito extends Monster {
	String tribe;
	int level, power, defense, money, hp, hpMax, mp, mpMax;
															
	int buff, debuff;// 버프와 디버프
	int upgradeS01;// 스킬강화 수치

	Mosquito(){
		this.tribe = "모기";
		this.level = 1; this.power = 10; this.defense = 10; this.money = 1; 
		this.hp = 100; this.hpMax = 100; this.mp = 50; this.mpMax = 50;
		this.buff = 0; this.debuff = 0;
		this.upgradeS01 = 0;
	}
	
	
	public int skill01() {// 몬스터 고유스킬 흡혈공격

		if (Player.hp < Player.hpMax) {
			int heal = (level * power + buff + debuff + upgradeS01) / 100 * 10;// 입힌피해의 10%만큼 힐
			if (Player.hp + heal >= Player.hpMax)// 힐량+현재체력이 최대체력을 넘으면 현재체력을 최대체력으로
				Player.hp = Player.hpMax;
			else
				Player.hp += heal;// 넘지 않는다면 힐(흡혈)
		}
		return level * power + buff + debuff + upgradeS01;// 데미지 리턴
	}

	public void printM() {
		System.out.print("                                                                           \r\n"
				+ "                                                                           \r\n"
				+ "                                r                                          \r\n"
				+ "                              PBBv                                         \r\n"
				+ "                            .BB. B                                         \r\n"
				+ "                           1BP   B                                         \r\n"
				+ "                          RB:   LB                                     r   \r\n"
				+ "                         MB   . RY                                    :D   \r\n"
				+ "                        YB.   7 B   .i                    .rJdgRgi    Q.   \r\n"
				+ "                        Bu .: .Bg   .r               idBBBBBB577B.   rP    \r\n"
				+ "                       BB   P  B.   .r           YQBBBP:2  i   Bi    B     \r\n"
				+ "                      .B:   Li.B    .L       .DBBQu i   2 iY :B7    7S     \r\n"
				+ "                      QB .7  dB:    :r     dQBd.   :r  B  rrBB.    .B      \r\n"
				+ "                      BX  K  PB     r   rBBg.   .  Q  Ii IBBr     :g.      \r\n"
				+ "                      B:   2.B     .. .BQY  .   r g  :BBQX      .77        \r\n"
				+ "                      B. u iB:     : BB7    L  L :BDBBY       :vr          \r\n"
				+ "                      B. .7BJ      BQd  :  v  QBBBU:        iv:            \r\n"
				+ "                      BZ  BB     7BJ:  .  .BRBQ7         :77.              \r\n"
				+ "                      BB 7B     BB     DuBBb:         .r7i                 \r\n"
				+ "                      BSdB     QU  XbRBBX.         .r7i.                   \r\n"
				+ "                      BjJB    BBsBBZY:         .:7ri                       \r\n"
				+ "                      KBB7BBBBE:Di          :r7i.                          \r\n"
				+ "                    .dPBr BBZBi :       .irr.                              \r\n"
				+ "                 DQ2BU.Q 7BSKBBD7   :rvr:                                  \r\n"
				+ "                 72PB: BBqBgSBJ PB5i:.                                     \r\n"
				+ "                  KX1uKJEuB  BRBQgB                                        \r\n"
				+ "                :Br   .   L. BD    B                                       \r\n"
				+ "               5B     r  . u  Br .:Qi                                      \r\n"
				+ "              PP     ..    s  BX:viv7                                      \r\n"
				+ "              i      r      i BZ   v7                                      \r\n"
				+ "                    ri   .  i ZBQBBB                                       \r\n"
				+ "                   iv        : BB2PB                                       \r\n"
				+ "                  ..         .  uBBB                                       \r\n"
				+ "                          .   .    s.                                      \r\n"
				+ "                           .   .                                           \r\n"
				+ "                                                                           \r\n" + "");
	}
}

//
public static void selectMonster() {
		Scanner in = new Scanner(System.in);
		int s = in.nextInt();
		if (s == 1) {
			Mosquito m1 = new Mosquito();
			battle(m1);
		} else if (s == 2) {
			Baki m2 = new Baki();
			battle(m2);
		}
	}

	public static void battle(Monster m1) {// 배틀 메서드
		Scanner in = new Scanner(System.in);
		System.out.println(m1.tribe + "와의 전투를 시작합니다.");
		m1.printM();
		
		while (true) {
			//=================================================플레이어 공격
			System.out.println(Player.name + "의 공격입니다.");
			int select = in.nextInt();
			int demage = 0;
			if(select == 1)
				demage = Player.p.skill01();
			else if(select == 2)
			{
				Strategy_attack sa1 = new Strategy_attack();
				sa1.sAttack(m1, select);
			}
			else if(select == 3) {
				System.out.println("무사히 도망쳤다.");
				break;
			}
			m1.hp -= demage;
			//=================================================몬스터가 죽으면
			if(m1.hp < 1)
			{
				System.out.println(m1.tribe + "가 쓰러졌습니다.");
				System.out.println(m1.money + "골드를 얻었습니다.");
				System.out.println(m1.exp + "경험치를 얻었습니다.");
				Player.pMoney += m1.money;
				Player.exp += m1.exp;
				if(Player.exp >= Player.expMax)//레벨업
				{
					System.out.printf("레벨이 올랐습니다.");
					Player.level += 1;
				}
				break;
			}
			// ===============================================플레이어의 방어와 몬스터의 공격
			System.out.println("방어턴입니다. 할일을 선택하세요");
			System.out.println("1. 포션사용");
			System.out.println("2. 전략적 선택지 사용");
			select = in.nextInt();
			demage = 0;
			if(select == 1)
			{
				if(Player.hpPotionN > 0)
				{
					HPPotion p1 = new HPPotion();
					p1.heal();
				}
				else
					System.out.println("포션 개수가 부족합니다.");
			}
			else if(select == 2)
			{
				if(Player.hpMax / Player.hp  > 10)//10% 이하로 떨어지면
				{
					
				}
			}
			else if(select == 3) {
				System.out.println("무사히 도망쳤다.");
				break;
			}
			
			
			System.out.println(m1.tribe + "의 공격입니다.");
			System.out.println(m1.skill01());// 공격스킬 1번

		}
	}



